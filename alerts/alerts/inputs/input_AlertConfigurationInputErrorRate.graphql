```
Configuration for ERROR_RATE alert type. Error rate alert is used to verify traffic comparing its error codes. 
Ther are two options. 
- OPTION 1: Can verify traffic of a time frame. Must set window field higher than 0.
- OPTION 2: Can verify traffic of a specific number of requests. Must set window field as 0 and minNumRequest higher than 0.
```
input AlertConfigurationInputErrorRate {
  # Error codes to check and compare
  ```Error codes to be checked and compared. By default: checked traffic will be all error codes except 0 and copmared traffic will be all error codes```
 	errorRateCodes: [ErrorRateCodesInput!]
  # Minutes
  ```Frequency of time in minutes in which the alert will be reviewed```
  periodicity: Int!
 	# Minutes
  ```The time frame in minutes```
  window: Int!
  # The number of times the alert must be triggered in order to notify.
  ```The number of times the alert must be triggered in order to notify```
  timesToAlert: Int!
  # true:	advise only if state change to KO. 
  #false: advise if an alert change to OK state.
  ```To allow recoveries notifications```
  noRecoveries: Boolean!
  # true: alert advice sent only if state has changed.  
  #	false: alert advice always sent.
  ```To allow notifications only if the status change```
  stateChangesOnly: Boolean!
  # minimum number of requests to be alert
  ```
  OPTION 1: defines the minimum number of requests must be in our historical Data before cheking the alert. 
  OPTION 2: defines the minimum number of requests must be in the window time frame to check the alert.
  ```
  minNumberRequests: Int!
 	# percentage (%)
  ```Minimum percentage of traffic with error codes(TO_CHECK) compared to error codes(TO_COMPARE) in the window time frame to be considered status ALERTING```
  percentageToAlert: Int!
  #email
  ``````Email addresses to send notifications``````
  email: [EmailInput]!
 #external supplier
  externalSupplier:[AlertObjectInput!]
  # true: traffic generated by travelgate
  # false: traffic generated by client
  ```To differentiate between traffic generated by travelgate (true) or traffic generated by buyers (false). If value not set, all traffic will be analysed```
  isFromTGX: Boolean
  # status returned by our Hub
  ```Possibility to filter traffic by hubStatus```
  hubStatus: [HubStatusInput!]
	# error codes
  ```Possibility to filter traffic by errorCodes```
  errorCode: [ErrorCodeInput!]
  # error types
  ```Possibility to filter traffic by errorTypes```
  errorType: [ErrorTypeInput!] 
  # supplier codes
  ```Possibility to filter traffic by suppliers (hub provider)```
	supplier:[AlertObjectInput!]
  # supplier codes
  ```Possibility to filter traffic by clients (hub user)```
	client:[AlertObjectInput!]
  # supplier codes
  ```Possibility to filter traffic by groups. It is mandatory to set an ORG group type. Only ORG, FOLDER and PRODUCT group types are allowed```
	group:[AlertGroupInput!]!
  # supplier codes
  ```Possibility to filter traffic by accesses```
	access:[AlertObjectInput!]
  # supplier codes
  ```Possibility to filter traffic by operations```
	operation:[AlertObjectInput!]
  # possibility of grouping. 
  # For example: can group by Supplier, errorType or both
  ```Possibility to group by traffic and calculate its parameters separately ```
	groupBy:[AlertGroups!]
}
