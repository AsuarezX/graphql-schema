```
Configuration update for PEAK_TRAFFIC alert type. Peak traffic is used to verify traffic comparing volum of requests between to time frame (window and historical window) . 
```
input AlertUpdateConfigurationInputPeakTraffic {
   # minutes
    ```The time frame in minutes to be used to compare with the window time frame```
  historicalWindow: Int
  #minutes
   ```Time frame in minutes to set the beginning of historicalWindow```
  offset: Int
  # Minutes
    ```Frequency of time in which the alert will be reviewed```
  periodicity: Int
 	# Minutes
   ``The time frame in minutes to be used to check the alert status```
  window: Int
  # The number of times the alert must be triggered in order to notify.
    ```The number of times the alert must be triggered in order to notify```
  timesToAlert: Int
  # true:	advise only if state change to KO. 
  #false: advise if an alert change to OK state.
  ```To allow recoveries notifications```
  noRecoveries: Boolean
  # true: alert advice sent only if state has changed.  
  #	false: alert advice always sent.
  ```To allow notifications only if the status change```
  stateChangesOnly: Boolean
  # minimum number of requests to be alert
  ```Minimum number of requests should be in the window to check alert```
  minNumberRequests: Int
 	# percentage (%)
  ```Minimum percentage of difference between the window and the historical window to be considered status ALERTING ```
  percentageToAlert: Int
  #email: Email!
  ```Email addresses to send notifications```
  email: [EmailInput]
  #external supplier
  externalSupplier:[AlertObjectInput!]
  # true: traffic generated by travelgate
  # false: traffic generated by client
  ```To differentiate between traffic generated by travelgate (true) or traffic generated by buyers (false). If value not set, all traffic will be analysed```
  isFromTGX: Boolean
  # status returned by our Hub
  ```Possibility to filter traffic by hubStatus```
  hubStatus: [HubStatusInput!]
	# error codes
  ```Possibility to filter traffic by errorCodes```
  errorCode: [ErrorCodeInput!]
  # error types
  ```Possibility to filter traffic by errorTypes```
  errorType: [ErrorTypeInput!] 
  # supplier codes
  ```Possibility to filter traffic by suppliers (hub provider)```
	supplier:[AlertObjectInput!]
  # supplier codes
  ```Possibility to filter traffic by clients (hub user)```
	client:[AlertObjectInput!]
  # supplier codes
  ```Possibility to filter traffic by groups. It is mandatory to set an ORG group type. Only ORG, FOLDER and PRODUCT group types are allowed```
	group:[AlertGroupInput!]
  # supplier codes
  ```Possibility to filter traffic by accesses```
	access:[AlertObjectInput!]
  # supplier codes
  ```Possibility to filter traffic by operations```
	operation:[AlertObjectInput!]
  # possibility of grouping. 
  # For example: can group by Supplier, errorType or both
  ```Possibility to group by traffic and calculate its parameters separately ```
	groupBy:[AlertGroups!]
}
