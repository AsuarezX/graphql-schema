# The query type, represents all of the entry points into our object graph.
extend type Query {
	  # Available options for a given date and itinerary.
	  search: Search!
  	# Returns status of the search service.
    searchStatusService: ServiceStatus!
  	# Returns detailed information about books.
  	booking: Booking
	  # Returns status of the quote service.
    bookingStatusService: ServiceStatus!
    # Returns status of the book service.
    bookStatusService: ServiceStatus!
    # Returns status of the book service.
    cancelStatusService: ServiceStatus!
    # Returns the mapping for a group, is necessary specify the group.
    mapping(groupCode: String!): Mapping!
  	# Returns the total price and cancellation policies of the Option selected in the previous step (Search).
	  quote: Quote!
	  # Returns status of the quote service.
    quoteStatusService: ServiceStatus!
  	# Available options for a given date and itinerary.
	  search: Search!
	  # Returns status of the search service.
    searchStatusService: ServiceStatus!
    # Returns accesses grouped by 'groups'.
    # If access identifiers 'ids' are sent, only those accesses will be read.
    # If 'groupsCodes' are sent, only accesses for these groups will be read
    # Requesting this query without any of these filters will provide all requestor accesses
    access(ids: [String!], groupCodes: [String!]): [GroupAccess!]
    # Reads defaultSettings of the given group
    defaultSettings(groupCode: String!): DefaultSettings
    # Returns suppliers and their groups.
    # If supplier identifiers 'ids' are sent, only those  will be read.
    # If 'groupsCodes' are sent, only suppliers for these groups will be read
    # Requesting this query without any of these filters will provide all requestor suppliers
    supplier(ids: [String!], groupCodes: [String!]): [Supplier!]
    # Returns connect users and their groups.
    # If connect user identifiers 'ids' are sent, only those  will be read.
    # If 'groupsCodes' are sent, only connect user for these groups will be read
    # Requesting this query without any of these filters will provide all requestor connect users
    connectUser(ids: [String!], groupCodes: [String!]): [ConnectUser!]
}
